{"version":3,"sources":["Components/NavBar.js","Pages/TxtEnc.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","Navbar","bg","expand","variant","style","position","top","zIndex","backdropFilter","padding","Container","Brand","fontSize","fontWeight","fontFamily","as","Link","to","Toggle","aria-controls","Collapse","id","Nav","className","textAlign","active","eventKey","TxtEnc","fileReader","FileReader","useState","key","setKey","ipText","setIpText","opText","setOpText","passVisible","setPassVisible","Form","Group","controlId","borderWidth","margin","borderStyle","borderRadius","Control","type","accept","size","onChange","e","file","target","files","readAsText","addEventListener","content","result","CardGroup","Card","height","borderColor","backgroundColor","resize","background","placeholder","value","border","display","marginBlockStart","alignSelf","width","boxShadow","Button","marginRight","color","onClick","disabled","window","encryptText","href","decryptText","borderLeftStyle","readonly","textFile","link","document","getElementById","data","Blob","URL","revokeObjectURL","createObjectURL","download","textDecoration","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.03082aa4.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Navbar, Nav, Container } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const NavBar = () => {\r\n    let navStyle = { position: 'sticky', top: '0', zIndex: '1', backdropFilter: 'blur(0px)', padding: '0 15px 0 15px' }\r\n    return (\r\n        <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\" style={navStyle}>\r\n            <Container>\r\n                <Navbar.Brand\r\n                    style={{ fontSize: '25px', fontWeight: '600', fontFamily: \"Noto Sans, sans-serif\" }}\r\n                    as={Link} to=\"/crypto\">Encryption</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav></Nav>\r\n                    <Nav className=\"me-auto\" style={{ fontSize: '18px', fontWeight: '300', fontFamily: \"Noto Sans, sans-serif\", textAlign: 'center' }}>\r\n                        <Nav.Link active eventKey=\"0\" as={Link} to=\"/crypto\">Home</Nav.Link>\r\n                        <Nav.Link eventKey=\"1\" as={Link} to=\"/crypto/text\">Text</Nav.Link>\r\n                        <Nav.Link eventKey=\"2\" as={Link} to=\"/crypto/image\">Image</Nav.Link>\r\n                        <Nav.Link eventKey=\"3\" as={Link} to=\"/crypto/audio\">Audio</Nav.Link>\r\n                        <Nav.Link eventKey=\"4\" as={Link} to=\"/crypto/video\">Video</Nav.Link>\r\n                    </Nav>\r\n                    <Nav style={{ fontSize: '18px', fontWeight: '300', fontFamily: \"Noto Sans, sans-serif\", textAlign: 'center' }}>\r\n                        <Nav.Link active eventKey=\"6\" as={Link} to=\"/crypto/about\">About</Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n}\r\n","import { Button, CardGroup, Card, Form } from 'react-bootstrap';\r\nimport React, { useState } from 'react';\r\nimport { FaEyeSlash, FaEye } from \"react-icons/fa\";\r\n\r\nexport const TxtEnc = () => {\r\n    let fileReader = new FileReader();\r\n    const [key, setKey] = useState('');\r\n    const [ipText, setIpText] = useState('');\r\n    const [opText, setOpText] = useState('');\r\n    const [passVisible, setPassVisible] = useState(false);\r\n\r\n    const handleFileChosen = (file) => {\r\n        fileReader.readAsText(file);\r\n        fileReader.addEventListener(\"loadend\", () => {\r\n            const content = fileReader.result;\r\n            setIpText(content);\r\n        });\r\n    };\r\n\r\n    let download = () => {\r\n        var textFile = null;\r\n        var link = document.getElementById('downloadlink');\r\n        var data = new Blob([opText], { type: 'text/plain' });\r\n        if (textFile !== null) {\r\n            window.URL.revokeObjectURL(textFile);\r\n        }\r\n        textFile = window.URL.createObjectURL(data);\r\n        link.href = textFile;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Form.Group controlId=\"formFileLg\"\r\n                style={{\r\n                    borderWidth: '5px',\r\n                    margin: '1% 1% 0 1%',\r\n                    borderStyle: 'double',\r\n                    borderRadius: '10px'\r\n                }}>\r\n                <Form.Control type=\"file\" accept='.txt' size=\"lg\" onChange={e => handleFileChosen(e.target.files[0])} />\r\n            </Form.Group>\r\n\r\n            <CardGroup>\r\n                <Card\r\n                    style={{\r\n                        height: '76vh', margin: '1%',\r\n                        padding: '2%', borderWidth: '5px',\r\n                        borderColor: 'black', backgroundColor: '#dee2e6',\r\n                        borderRadius: '10px'\r\n                    }}>\r\n                    <h2 style={{ textAlign: 'center' }}>Input Text</h2>\r\n                    <textarea style={{ height: '100%', resize: 'none', background: 'white' }} placeholder=\"Write Your Text Here\"\r\n                        value={ipText} onChange={(e) => setIpText(e.target.value)} />\r\n\r\n                    <CardGroup style={{ margin: '1% 0 1% 0' }}>\r\n                        <Card style={{ padding: '.5%', margin: '0%', background: 'none', border: 'none' }}>\r\n                            <div\r\n                                style={{\r\n                                    position: 'relative',\r\n                                    display: 'flex',\r\n                                    backgroundColor: 'white'\r\n                                }}>\r\n                                <Form.Control size='sm' id='key'\r\n                                    type={(passVisible) ? \"text\" : \"password\"}\r\n                                    placeholder=\"Enter Key\"\r\n                                    value={key} onChange={(e) => setKey(e.target.value)}\r\n                                    style={{\r\n                                        marginBlockStart: 'auto', alignSelf: 'center',\r\n                                        width: '100%', border: 'none', boxShadow: 'none'\r\n                                    }} />\r\n                                <Button\r\n                                    style={{\r\n                                        fontSize: '18px', margin: '0px',\r\n                                        padding: '0px', marginRight: '6px',\r\n                                        color: 'black', background: 'white',\r\n                                        border: 'none', boxShadow: 'none'\r\n                                    }}\r\n                                    onClick={() => { setPassVisible(!passVisible) }}>\r\n                                    {(passVisible) ? <FaEye /> : <FaEyeSlash />}\r\n                                </Button>\r\n                            </div>\r\n                        </Card>\r\n                        <Card style={{ padding: '.5%', margin: '0%', background: 'none', border: 'none' }}>\r\n                            <Button\r\n                                disabled={(ipText === \"\" || key === \"\") ? true : false}\r\n                                onClick={() => { setOpText(window.encryptText(ipText, key)) }}\r\n                                variant=\"primary\" size=\"sm\"\r\n                                style={{ marginBlockStart: 'auto', alignSelf: 'center', width: '100%' }}\r\n                                href=\"#output\">\r\n                                Encrypt\r\n                            </Button>\r\n                        </Card>\r\n                        <Card style={{ padding: '.5%', margin: '0%', background: 'none', border: 'none' }}>\r\n                            <Button\r\n                                variant=\"primary\" size=\"sm\"\r\n                                disabled={(ipText === \"\" || key === \"\") ? true : false}\r\n                                onClick={() => { setOpText(window.decryptText(ipText, key)) }}\r\n                                style={{ marginBlockStart: 'auto', alignSelf: 'center', width: '100%' }}\r\n                                href=\"#output\">\r\n                                Decrypt\r\n                            </Button>\r\n                        </Card>\r\n                    </CardGroup>\r\n\r\n                </Card>\r\n                <Card id='output'\r\n                    style={{\r\n                        height: '76vh', margin: '1%', padding: '2%',\r\n                        borderWidth: '5px', borderColor: 'black',\r\n                        borderLeftStyle: 'groove', backgroundColor: '#dee2e6',\r\n                        borderRadius: '10px'\r\n                    }}>\r\n                    <h2 style={{ textAlign: 'center' }}>Output Text</h2>\r\n                    <textarea readonly={true} style={{ height: '90vh', resize: 'none', background: 'white' }}\r\n                        value={opText} placeholder=\"Output Text Will Be Generated Here\" />\r\n\r\n                    <CardGroup style={{ margin: '1% 0 1% 0' }}>\r\n                        <Card style={{ padding: '.5%', margin: '0%', background: 'none', border: 'none' }}>\r\n                            <Button onClick={() => { download() }} variant=\"primary\" size=\"sm\"\r\n                                disabled={(opText === \"\") ? true : false}\r\n                                style={{ marginBlockStart: 'auto', alignSelf: 'center', width: '100%' }}>\r\n                                <a download=\"output.txt\" id=\"downloadlink\" style={{ color: 'white', textDecoration: 'none' }}>Download Text</a>\r\n                            </Button>\r\n                        </Card>\r\n                    </CardGroup>\r\n                </Card>\r\n            </CardGroup>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport React from 'react';\nimport { NavBar } from './Components/NavBar';\nimport { TxtEnc } from './Pages/TxtEnc';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <NavBar />\n        <Switch>\n\n        <Route exact path=\"/crypto\">\n            <TxtEnc />\n          </Route>\n\n          <Route exact path=\"/crypto/text\">\n            <TxtEnc />\n          </Route>\n\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}